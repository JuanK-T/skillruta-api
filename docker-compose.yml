services:
  mysql:
    image: mysql:8.0
    container_name: skillruta-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: skillruta
      MYSQL_USER: skilluser
      MYSQL_PASSWORD: skillpass
    command: --default-authentication-plugin=mysql_native_password --lower_case_table_names=1
    ports:
      - '3307:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  adminer:
    image: adminer:4
    container_name: skillruta-adminer
    restart: unless-stopped
    depends_on:
      - mysql
    ports:
      - '8080:8080'

  minio:
    image: minio/minio:latest
    container_name: skillruta-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: 'uploads,backups,temp'
    ports:
      - '9000:9000' # API port
      - '9001:9001' # Console port
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  # Cliente web para administrar MinIO (opcional)
  minio-client:
    image: minio/mc:latest
    container_name: skillruta-minio-client
    restart: unless-stopped
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD) do echo 'Waiting for MinIO...' && sleep 1; done;
      echo 'Creating default buckets...';
      /usr/bin/mc mb minio/uploads;
      /usr/bin/mc mb minio/backups;
      /usr/bin/mc mb minio/temp;
      /usr/bin/mc anonymous set download minio/uploads;
      tail -f /dev/null
      "
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: skillruta-mailhog
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # UI web

volumes:
  mysql_data:
  minio_data:
    driver: local
